---

- hosts: all
  become: yes

  tasks:

    - name: set default php command to the specified version
      command: "update-alternatives --set php /usr/bin/php{{ php_version }}" 
      register: output

    - debug: var=output.stdout_lines

    - name: "/usr/bin/php{{ php_version }} -d memory_limit=-1 symfony cc"
      expect:
        chdir: "/usr/share/nginx/atom"
        command: "/usr/bin/php{{ php_version }} -d memory_limit=-1 symfony cc"
        echo: true
        responses:
          (?i)\(y\/N\): y
      register: output
      failed_when: false
    - debug: var=output.stdout_lines

    - name: set ownership /usr/share/nginx/atom
      file:
        path: /usr/share/nginx/atom
        owner: www-data
        group: www-data
        recurse: yes

    - name: install atom php-fpm pool
      template:
        src: templates/fpm-atom.conf
        dest: "/etc/php/{{ php_version }}/fpm/pool.d/atom.conf"
        force: true

    - name: install nginx site {{ server_name }}
      template:
        src: templates/nginx-atom.j2
        dest: "/etc/nginx/sites-available/{{ server_name }}"

    - name: enable nginx site {{ server_name }}
      file:
        src: "/etc/nginx/sites-available/{{ server_name }}"
        dest: "/etc/nginx/sites-enabled/{{ server_name }}"
        state: link
      notify: restart webserver

    - name: disable nginx default site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: restart webserver

    - name: install atom-worker service
      template:
        src: templates/atom-worker.service
        dest: /etc/systemd/system/atom-worker.service

    - name: restart fpm
      systemd:
        state: restarted
        name: "php{{ php_version }}-fpm"

    - name: start atom-worker
      systemd:
        state: started
        name: atom-worker
        daemon_reload: true
        enabled: true

  handlers:
    - name: restart webserver
      systemd:
        state: restarted
        name: nginx

