upstream atom {
   server unix:/var/run/php/php{{ php_version }}-fpm.atom.sock;
}

server {

   listen 80;
   listen 443 ssl;

   root /usr/share/nginx/atom;

   # http://wiki.nginx.org/HttpCoreModule#server_name
   # _ means catch any, but it's better if you replace this with your server
   # name, e.g. archives.foobar.com
   server_name {{ server_name }};

   client_max_body_size 72M;

   # http://wiki.nginx.org/HttpCoreModule#try_files
   location / {
      try_files $uri /index.php?$args;
   }

   location ~ /\. {
      deny all;
      return 404;
   }

   location ~* (\.yml|\.ini|\.tmpl)$ {
      deny all;
      return 404;
   }

   location ~* /(?:uploads|files)/.*\.php$ {
      deny all;
      return 404;
   }

   location ~* /uploads/r/(.*)/conf/ {

   }

   location ~* ^/uploads/r/(.*)$ {
      include /etc/nginx/fastcgi_params;
      set $index /index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$index;
      fastcgi_param SCRIPT_NAME $index;
      fastcgi_pass atom;
   }

   location ~ ^/private/(.*)$ {
      internal;
      alias /usr/share/nginx/atom/$1;
   }

   location ~ ^/(index|qubit_dev)\.php(/|$) {
      include /etc/nginx/fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_split_path_info ^(.+\.php)(/.*)$;
      fastcgi_pass atom;
   }

   location ~* \.php$ {
      deny all;
      return 404;
   }

   ssl_certificate /etc/letsencrypt/live/{{ server_name }}/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/{{ server_name }}/privkey.pem;

   # Redirect non-https traffic to https
   if ($scheme != "https") {
      return 301 https://$host$request_uri;
   }

}
